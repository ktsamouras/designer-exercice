/*
     Globally override default bootstrap variables
*/

// Redefine the colors for the exercice
$theme-colors: (
    primary: #8F547C,
    secondary: #00B8B4,
    secondary-light: #00D3CD,
    secondary-dark: #00A4A0,
    medium: #6c757d,
    light: #e9ecef,
    lighter: #FAFAFA,
    yellow: #FCD600,
    yellow-light: #FEFCBD,
    yellow-dark: #FBD100,
    orange: #FFA24C,
    orange-light: #FFB16A,
    blue: #54C0F2,
    blue-light: #72CBF5,
    purple: #894268,
    purple-light: #9A4A75
);

$body-bg: #FAFAFA;
$btn-border-radius: 0;
$btn-border-radius-lg: 0;
$btn-border-radius-sm: 0;
$progress-border-radius: 0;
$font-weight-medium: 500;
// Function to create all the class helpers for opacities
$opacities: 0 1 2 3 4 5 6 7 8 9;
@each $opacity in $opacities {
    .opacity-#{$opacity} {
        opacity: $opacity / 10 !important;
    }
}
// Function to create additional width helpers (except for 0, 50 and 100 that already exists in Bootstrap)
$widths: 10 20 25 30 40 60 70 75 80 90;
@each $width in $widths {
    .w-#{$width} {
        width: percentage($width / 100);
    }
}

// Required parts of bootstrap
@import "./node_modules/bootstrap/scss/functions";
@import "./node_modules/bootstrap/scss/variables";
@import "./node_modules/bootstrap/scss/mixins";


/* 
    Custom styles - I did not chose to separate my styles in different files since it's a small exercice.
*/

// I am setting these based on the requirements.
html, body {
    min-width: 1080px;
    min-height: 100vh;
}

.navbar {
    // I only adjust the variable for links inside of the navbar
    $link-color: $white;

    &__icon-button {
        // I will generally add some padding to make it easier for the user to click on elements
        padding: $spacer * .25;
        margin: 0 ($spacer * .5);
        color: $link-color;
        &:hover {
            color: darken($link-color, 15%);
        }
    }
    &__user-picture {
        padding: $spacer * .25;
        margin: 0 0 0 ($spacer * 1.5);
        color: $link-color;
        &:hover {
            text-decoration: none;
            color: darken($link-color, 15%);
        }
        > img {
            width: 24px;
            height: 24px;
            border-radius: 50%;

            margin: 0 ($spacer * .5) 0 0;
            background-color: $gray-500;
        }
    }
    &--secondary {
        opacity: .54;
    }
    &--badge {
        position: relative;

        margin: 0 $spacer 0 0;
        > .badge {
            position: absolute;
            top: -4px;
            right: -18px;

            font-family: $font-family-base;
            font-weight: $font-weight-bolder;
        }
    }
}

.header {
    &__input-group {
        border-bottom: 1px solid $gray-600;
    }
    &__filter {
        border: 1px solid $gray-600; 
        > i:first-child {
            padding: $spacer * .25;
            background: theme-color("primary");
            color: $white;
        }
        > span {
            color: $gray-700; 
            font-size: $small-font-size;
        }
        > i:last-child {
            padding: $spacer * .25;
            color: $gray-600; 
        }
    }
    &__input {
        border: none;

        padding: $spacer * .25;
        font-weight: $font-weight-normal;
        &::placeholder {
            color: $gray-500;
        }
    }
    &__icon-button {
        padding: $spacer * .25;
        color: $gray-600; 
        &:hover {
            color: darken($gray-600, 15%);
        }
    }
}
.user-actions {
    button {
        text-transform: uppercase;
        font-weight: $font-weight-bold;
    }
}

.calendar {
    display: grid;

    grid-template-columns: 20vw 1fr;
    grid-template-rows: 64px repeat(6, 36px);
    grid-gap: 1px;

    text-align: center;
    font-weight: $font-weight-bold;
    background-color: $gray-300;
    color: $gray-700;
    > div:nth-child(-n + 2) {
        background-color: $gray-200;
    }
    > div:nth-child(3), 
    > div:nth-child(5), 
    > div:nth-child(7), 
    > div:nth-child(9), 
    > div:nth-child(11), 
    > div:nth-child(13) {
        background-color: $white;
    }
    &__month {
        display: grid;

        grid-template-rows: 31px;
        grid-template-columns: 1fr;
        border-bottom: 1px solid $gray-400;
    }
    &__dates {
        display: grid;

        grid-template-columns: repeat(28, 1fr);
        grid-template-rows: 32px;
        grid-gap: 1px;

        background-color: $gray-400;
        > div {
            display: flex;
            align-items: center;
            justify-content: center;

            background-color: $gray-200;
            &:nth-child(19) {
                background-color: theme-color("yellow-light");
            }
        }

    }
    &__gray {
        > div > .progress {
            @extend .opacity-8;
        }
    }
    &__colors {
        > div {
            .progress {
                cursor: pointer;
            }
            .progress__actions {
                position: absolute;
                top: -50px;
                z-index: $zindex-popover;
                width: max-content;

                background-color: $white;
                padding: $spacer * .5;
                @extend .border;
                @extend .shadow;
                > .btn {
                    font-weight: $font-weight-medium;
                    @extend .text-uppercase;
                    @extend .btn-sm;
                    @extend .mx-1;
                }
            }
        }
    }
    &__gray, &__colors {
        display: grid;

        grid-template-columns: repeat(28, 1fr);
        grid-template-rows: 1fr;
        grid-gap: 1px;

        background-color: $gray-200;
        > div {
            position: relative;

            background-color: #fff;
            &:nth-child(19) {
                background-color: theme-color("yellow-light");
            }
            > .progress {
                position: absolute;
                z-index: $zindex-modal;
                top: 0; right: 0; bottom: 0; left: 0;
                user-select: none;

                height: auto;

                margin: 2px 1px;
                > span {
                    position: absolute;
                    top: 0; right: 0; bottom: 0; left: 0;

                    padding: 6px 3px;
                    // Truncate the text if it's too long inside of the timeline horizontal bars
                    @extend .text-truncate;
                    color: $white;
                }
                > .marked {
                    // The marked items use different colors so I defined them here
                    $orange: #F9AD2D;
                    $red: #EA5F5C;
                    $green: #00A843;
                    $size: 20px;

                    position: absolute;
                    top: 0; left: 0;

                    height: 0;
                    width: 0;
                    border-right: $size solid transparent;
                    &.orange {
                        border-top: $size solid $orange;
                    }
                    &.red {
                        border-top: $size solid $red;
                    }
                    &.green {
                        border-top: $size solid $green;
                    }
                }
            }
        }
    }
}

// Only import optional parts of bootstrap that we need
@import "./node_modules/bootstrap/scss/root";
@import "./node_modules/bootstrap/scss/reboot";
@import "./node_modules/bootstrap/scss/type";
@import "./node_modules/bootstrap/scss/grid";
@import "./node_modules/bootstrap/scss/buttons";
@import "./node_modules/bootstrap/scss/navbar";
@import "./node_modules/bootstrap/scss/badge";
@import "./node_modules/bootstrap/scss/progress";
@import "./node_modules/bootstrap/scss/tooltip";
@import "./node_modules/bootstrap/scss/utilities";

